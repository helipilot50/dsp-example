extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.3"
    import: ["@key", "@external", "@shareable"]
  )

scalar DateTime
scalar Money
scalar URL

type StringAttribute {
  key: String!
  value: String
}

type NumberAttribute {
  key: String!
  value: Int
}

type BooleanAttribute {
  key: String!
  value: Boolean
}
type DateTimeAttribute {
  key: String!
  value: DateTime
}

union Attribute =
    StringAttribute
  | NumberAttribute
  | BooleanAttribute
  | DateTimeAttribute

type EmailAddress {
  id: ID
  emailAddress: String
  verification: Verification
  linkedTo: [IdentificationLink]
}
type IdentificationLink {
  id: ID
  type: String
}
type PhoneNumber {
  id: ID
  phoneNumber: String
  reservedForSecondFactor: Boolean
  defaultSecondFactor: Boolean
  verification: Verification
  linkedTo: [IdentificationLink]
}
type Web3Wallet {
  id: ID
  web3Wallet: String
  verification: Verification
}
type Verification {
  status: String
  strategy: String
  externalVerificationRedirectURL: URL
  attempts: Int
  expireAt: Int
  nonce: String
}
type ExternalAccount @key(fields: "id") {
  id: String
  provider: String
  identificationId: String
  externalId: String
  approvedScopes: String
  emailAddress: String
  firstName: String
  lastName: String
  imageUrl: String
  username: String
  publicMetadata: [Attribute]
  label: String
  verification: Verification
}

type User @key(fields: "id") @shareable {
  id: ID
  passwordEnabled: Boolean
  totpEnabled: Boolean
  backupCodeEnabled: Boolean
  twoFactorEnabled: Boolean
  banned: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  imageUrl: String
  hasImage: Boolean
  gender: String
  birthday: String
  primaryEmailAddressId: String
  primaryPhoneNumberId: String
  primaryWeb3WalletId: String
  lastSignInAt: DateTime
  externalId: ID
  username: String
  firstName: String
  lastName: String
  publicMetadata: [Attribute]
  privateMetadata: [Attribute]
  unsafeMetadata: [Attribute]
  emailAddresses: [EmailAddress]
  phoneNumbers: [PhoneNumber]
  web3Wallets: [Web3Wallet]
  externalAccounts: [ExternalAccount]
  portfolio: Portfolio
}
extend type Account @key(fields: "id") {
  id: ID! @external
  """
  List of Users permitted to act on the Account
  """
  users: [User]
}

type Portfolio @key(fields: "id") {
  id: ID
  name: String
  description: String
  createdAt: DateTime
  updatedAt: DateTime
  users: [User]
  accounts: [Account]
  brands: [Brand]
}

extend type Query {
  user(userId: ID!): User
  me: User
  myPortfolio: Portfolio
  portfolio(portfolioId: ID!): Portfolio
  users(searchCriteria: String): [User]
  portfolios: [Portfolio]
}

input NewPortfolio {
  name: String!
  description: String!
  userIds: [ID]!
  accountIds: [ID]!
  brandIds: [ID]!
}

extend type Mutation {
  newPortfolio(portfolio: NewPortfolio!): Portfolio
  mapUsersToPortfolio(portfolioId: ID!, userIds: [ID]!): Portfolio
  mapAccountsToPortfolio(portfolioId: ID!, accountIds: [ID]!): Portfolio
  mapBrandsToPortfolio(portfolioId: ID!, brandIds: [ID]!): Portfolio
}

extend type Subscription {
  portfolioCreated: Portfolio
  portfolioUsersModified(portfolioId: ID!): Portfolio
  portfolioAccountsModified(portfolioId: ID!): Portfolio
  portfolioBrandsModified(portfolioId: ID!): Portfolio
}
