extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.3"
    import: ["@key", "@shareable", "@external", "@requires"]
  )

extend type Query {
  """
  Get all audiances
  """
  audience(audienceId: ID!): Audience
  audiences(someArgument: String): AudienceList!
  segment(segmentId: ID!): Segment
  segments(someArgument: String): [Segment]!
}

"""
Generic audiance
"""
interface Audience {
  id: ID!
  name: String!
  description: String
  segments(offset: Int = 0, limit: Int = 100): [Segment]!
}

"""
Onsite audiance
"""
type OnsiteAudience implements Audience @key(fields: "id") {
  id: ID!
  name: String!
  description: String
  segments(offset: Int = 0, limit: Int = 100): [Segment]!
}

"""
Offsite audiance
"""
type OffsiteAudience implements Audience @key(fields: "id") {
  id: ID!
  name: String!
  description: String
  segments(offset: Int = 0, limit: Int = 100): [Segment]!
}

"""
Audience Segment
"""
type Segment @key(fields: "id") {
  id: ID!
  name: String!
  description: String
  audiences(offset: Int = 0, limit: Int = 100): [Audience]!
}

"""
Audience List
"""
type AudienceList {
  audiences: [Audience]!
  totalCount: Int
  cursor: String
  hasMore: Boolean
  offset: Int
  limit: Int
}

# externals

extend type Lineitem @key(fields: "id") {
  id: ID! @external
  audience: Audience
}
